security:
  encoders:
    App\Entity\User:
      algorithm: auto
  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: username
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    signup:
      pattern: ^/api/users
      stateless: true
      anonymous: true
      methods: [POST]
    authentication:
      pattern: ^/api/authentication_token
      stateless: true
      anonymous: true
      json_login:
        check_path: /api/authentication_token
        username_path: username
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
    api:
      pattern: ^/api
      stateless: true
      anonymous: true
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator
  access_control:
    - { path: ^/api/authentication_token, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/users, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [GET] }
    - path: ^/api/users,
      roles: IS_AUTHENTICATED_FULLY,
      methods: [PUT, DELETE]
    - path: ^/api/categories,
      roles: IS_AUTHENTICATED_ANONYMOUSLY,
      methods: [GET]
    - path: ^/api/categories,
      roles: ROLE_ADMIN,
      methods: [POST, PUT, DELETE]
    - path: ^/api/subcategories,
      roles: IS_AUTHENTICATED_ANONYMOUSLY,
      methods: [GET]
    - path: ^/api/subcategories,
      roles: ROLE_ADMIN,
      methods: [POST, PUT, DELETE]
    - path: ^/api/topics,
      roles: IS_AUTHENTICATED_ANONYMOUSLY,
      methods: [GET]
    - path: ^/api/topics,
      roles: IS_AUTHENTICATED_FULLY,
      methods: [POST, PUT, DELETE]
    - path: ^/api/topic_replies,
      roles: IS_AUTHENTICATED_ANONYMOUSLY,
      methods: [GET]
    - path: ^/api/topic_replies,
      roles: IS_AUTHENTICATED_FULLY,
      methods: [POST, PUT, DELETE]
